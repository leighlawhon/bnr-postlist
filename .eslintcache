[{"/Users/lawhl/Sites/bnr/bnr-postlist/src/App.js":"1","/Users/lawhl/Sites/bnr/bnr-postlist/src/serviceWorker.js":"2","/Users/lawhl/Sites/bnr/bnr-postlist/src/index.tsx":"3","/Users/lawhl/Sites/bnr/bnr-postlist/src/app/store.ts":"4","/Users/lawhl/Sites/bnr/bnr-postlist/src/app/rootReducer.ts":"5","/Users/lawhl/Sites/bnr/bnr-postlist/src/features/postlist/postlistSlice.ts":"6","/Users/lawhl/Sites/bnr/bnr-postlist/src/app/api/postAPI.tsx":"7","/Users/lawhl/Sites/bnr/bnr-postlist/src/features/postlist/PostList.tsx":"8","/Users/lawhl/Sites/bnr/bnr-postlist/src/features/postlist/featuredPosts.tsx":"9","/Users/lawhl/Sites/bnr/bnr-postlist/src/features/postlist/sidebarPosts.tsx":"10","/Users/lawhl/Sites/bnr/bnr-postlist/src/components/select/Select.tsx":"11","/Users/lawhl/Sites/bnr/bnr-postlist/src/components/postItem/postItem.tsx":"12","/Users/lawhl/Sites/bnr/bnr-postlist/src/features/postlist/FeaturedPosts.tsx":"13","/Users/lawhl/Sites/bnr/bnr-postlist/src/features/postlist/SidebarPosts.tsx":"14"},{"size":307,"mtime":1612725388269,"results":"15","hashOfConfig":"16"},{"size":5141,"mtime":1612307254648,"results":"17","hashOfConfig":"16"},{"size":462,"mtime":1612725358174,"results":"18","hashOfConfig":"16"},{"size":596,"mtime":1612590022145,"results":"19","hashOfConfig":"16"},{"size":309,"mtime":1612631015312,"results":"20","hashOfConfig":"16"},{"size":1728,"mtime":1612679856556,"results":"21","hashOfConfig":"16"},{"size":450,"mtime":1612630714731,"results":"22","hashOfConfig":"16"},{"size":1393,"mtime":1612742305214,"results":"23","hashOfConfig":"16"},{"size":827,"mtime":1612738837316,"results":"24","hashOfConfig":"16"},{"size":251,"mtime":1612738922758,"results":"25","hashOfConfig":"16"},{"size":533,"mtime":1612742321822,"results":"26","hashOfConfig":"16"},{"size":1224,"mtime":1612743517994,"results":"27","hashOfConfig":"16"},{"size":827,"mtime":1612743525691,"results":"28","hashOfConfig":"16"},{"size":206,"mtime":1612743676777,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"z609ab",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"37"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"37"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"37"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/lawhl/Sites/bnr/bnr-postlist/src/App.js",[],["63","64"],"/Users/lawhl/Sites/bnr/bnr-postlist/src/serviceWorker.js",[],"/Users/lawhl/Sites/bnr/bnr-postlist/src/index.tsx",[],["65","66"],"/Users/lawhl/Sites/bnr/bnr-postlist/src/app/store.ts",[],"/Users/lawhl/Sites/bnr/bnr-postlist/src/app/rootReducer.ts",["67"],"import { combineReducers } from '@reduxjs/toolkit';\nimport { ImportsNotUsedAsValues } from 'typescript';\nimport postsResults from '../features/postlist/postlistSlice'\nconst rootReducer = combineReducers({\n  postsResults\n});\n\nexport type RootState = ReturnType<typeof rootReducer>;\n\nexport default rootReducer;","/Users/lawhl/Sites/bnr/bnr-postlist/src/features/postlist/postlistSlice.ts",["68"],"import { createSlice, PayloadAction } from '@reduxjs/toolkit';\n\nimport { AppThunk } from '../../app/store';\nimport { Post, PostResults, getPosts } from '../../app/api/postAPI'\nimport { SelectItem } from '../../components/select/Select'\n\nexport interface PostsState {\n  posts: Post[] | null\n  error: string | null\n  loading: boolean\n  userIds: SelectItem[] | null\n}\n\nconst initialState = {\n  posts: [],\n  error: null,\n  loading: false,\n  userIds: []\n} as PostsState;\n\nconst postsResults = createSlice({\n  name: 'posts',\n  initialState,\n  reducers: {\n    getPostsStart(state) {\n      state.loading = true\n      state.error = null\n    },\n    getPostsSuccess(state, action: PayloadAction<PostResults>) {\n      state.posts = action.payload.postsResults\n      state.loading = false\n      state.error = null\n    },\n    getPostsFailed(state, action: PayloadAction<string>) {\n      state.loading = false\n      state.error = action.payload\n    },\n    setUserIds(state, action: PayloadAction<PostResults>) {\n      const selectArr = extractUserIds(action.payload).map(id => {\n        return { value: id, label: id, id }\n      })\n      state.userIds = selectArr;\n    }\n  }\n})\n\nexport const {\n  getPostsStart,\n  getPostsSuccess,\n  getPostsFailed,\n  setUserIds\n} = postsResults.actions\n\nexport default postsResults.reducer\n\nexport const fetchPosts = (): AppThunk => async dispatch => {\n  try {\n    const posts = await getPosts()\n      .then((data) => {\n        dispatch(getPostsSuccess(data))\n        dispatch(setUserIds(data))\n      })\n  } catch (err) {\n    dispatch(getPostsFailed(err.toString()))\n  }\n\n}\n\nexport const extractUserIds = (data: PostResults) => {\n  return [...new Set(data.postsResults.map((post) => post.userId.toString()))]\n}","/Users/lawhl/Sites/bnr/bnr-postlist/src/app/api/postAPI.tsx",[],"/Users/lawhl/Sites/bnr/bnr-postlist/src/features/postlist/PostList.tsx",[],"/Users/lawhl/Sites/bnr/bnr-postlist/src/features/postlist/featuredPosts.tsx",[],"/Users/lawhl/Sites/bnr/bnr-postlist/src/features/postlist/sidebarPosts.tsx",["69"],"/Users/lawhl/Sites/bnr/bnr-postlist/src/components/select/Select.tsx",["70"],"import React, { useEffect } from 'react';\n\nexport interface SelectItem {\n  label: string,\n  value: string,\n  id: string\n}\ninterface SelectState {\n  options: SelectItem[],\n  onChange: (event: React.ChangeEvent<HTMLSelectElement>) => void;\n}\n\nexport default function Select(props: SelectState) {\n\n  return (\n    <select onChange={props.onChange}>\n      {props.options.length > 0 ? props.options.map((option) => {\n        return (<option key={option.id} value={option.value}>{option.label}</option>)\n      }) : null}\n    </select>\n  )\n}","/Users/lawhl/Sites/bnr/bnr-postlist/src/components/postItem/postItem.tsx",[],"/Users/lawhl/Sites/bnr/bnr-postlist/src/features/postlist/FeaturedPosts.tsx",[],"/Users/lawhl/Sites/bnr/bnr-postlist/src/features/postlist/SidebarPosts.tsx",[],{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","replacedBy":"74"},{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","severity":1,"message":"76","line":2,"column":10,"nodeType":"77","messageId":"78","endLine":2,"endColumn":32},{"ruleId":"75","severity":1,"message":"79","line":58,"column":11,"nodeType":"77","messageId":"78","endLine":58,"endColumn":16},{"ruleId":"75","severity":1,"message":"80","line":3,"column":10,"nodeType":"77","messageId":"78","endLine":3,"endColumn":21},{"ruleId":"75","severity":1,"message":"81","line":1,"column":17,"nodeType":"77","messageId":"78","endLine":1,"endColumn":26},"no-native-reassign",["82"],"no-negated-in-lhs",["83"],"@typescript-eslint/no-unused-vars","'ImportsNotUsedAsValues' is defined but never used.","Identifier","unusedVar","'posts' is assigned a value but never used.","'PostContext' is defined but never used.","'useEffect' is defined but never used.","no-global-assign","no-unsafe-negation"]