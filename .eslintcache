[{"/Users/lawhl/Sites/bnr/bnr-postlist/src/App.js":"1","/Users/lawhl/Sites/bnr/bnr-postlist/src/serviceWorker.js":"2","/Users/lawhl/Sites/bnr/bnr-postlist/src/index.tsx":"3","/Users/lawhl/Sites/bnr/bnr-postlist/src/app/store.ts":"4","/Users/lawhl/Sites/bnr/bnr-postlist/src/app/rootReducer.ts":"5","/Users/lawhl/Sites/bnr/bnr-postlist/src/features/postlist/postlistSlice.ts":"6","/Users/lawhl/Sites/bnr/bnr-postlist/src/app/api/postAPI.tsx":"7","/Users/lawhl/Sites/bnr/bnr-postlist/src/features/postlist/PostList.tsx":"8","/Users/lawhl/Sites/bnr/bnr-postlist/src/app/components/select/Select.tsx":"9","/Users/lawhl/Sites/bnr/bnr-postlist/src/features/postlist/featuredPosts.tsx":"10","/Users/lawhl/Sites/bnr/bnr-postlist/src/features/postlist/sidebarPosts.tsx":"11"},{"size":317,"mtime":1612638367430,"results":"12","hashOfConfig":"13"},{"size":5141,"mtime":1612307254648,"results":"14","hashOfConfig":"13"},{"size":479,"mtime":1612653246763,"results":"15","hashOfConfig":"13"},{"size":596,"mtime":1612590022145,"results":"16","hashOfConfig":"13"},{"size":309,"mtime":1612631015312,"results":"17","hashOfConfig":"13"},{"size":1732,"mtime":1612676395341,"results":"18","hashOfConfig":"13"},{"size":450,"mtime":1612630714731,"results":"19","hashOfConfig":"13"},{"size":1449,"mtime":1612677753457,"results":"20","hashOfConfig":"13"},{"size":525,"mtime":1612672982645,"results":"21","hashOfConfig":"13"},{"size":863,"mtime":1612677429681,"results":"22","hashOfConfig":"13"},{"size":859,"mtime":1612677972806,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"z609ab",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"31"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"31"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"31"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/lawhl/Sites/bnr/bnr-postlist/src/App.js",[],["51","52"],"/Users/lawhl/Sites/bnr/bnr-postlist/src/serviceWorker.js",[],"/Users/lawhl/Sites/bnr/bnr-postlist/src/index.tsx",[],["53","54"],"/Users/lawhl/Sites/bnr/bnr-postlist/src/app/store.ts",[],"/Users/lawhl/Sites/bnr/bnr-postlist/src/app/rootReducer.ts",["55"],"import { combineReducers } from '@reduxjs/toolkit';\nimport { ImportsNotUsedAsValues } from 'typescript';\nimport postsResults from '../features/postlist/postlistSlice'\nconst rootReducer = combineReducers({\n  postsResults\n});\n\nexport type RootState = ReturnType<typeof rootReducer>;\n\nexport default rootReducer;","/Users/lawhl/Sites/bnr/bnr-postlist/src/features/postlist/postlistSlice.ts",["56"],"import { createSlice, PayloadAction } from '@reduxjs/toolkit';\n\nimport { AppThunk } from '../../app/store';\nimport { Post, PostResults, getPosts } from '../../app/api/postAPI'\nimport { SelectItem } from '../../app/components/select/Select'\n\nexport interface PostsState {\n  posts: Post[] | null\n  error: string | null\n  loading: boolean\n  userIds: SelectItem[] | null\n}\n\nconst initialState = {\n  posts: [],\n  error: null,\n  loading: false,\n  userIds: []\n} as PostsState;\n\nconst postsResults = createSlice({\n  name: 'posts',\n  initialState,\n  reducers: {\n    getPostsStart(state) {\n      state.loading = true\n      state.error = null\n    },\n    getPostsSuccess(state, action: PayloadAction<PostResults>) {\n      state.posts = action.payload.postsResults\n      state.loading = false\n      state.error = null\n    },\n    getPostsFailed(state, action: PayloadAction<string>) {\n      state.loading = false\n      state.error = action.payload\n    },\n    setUserIds(state, action: PayloadAction<PostResults>) {\n      const selectArr = extractUserIds(action.payload).map(id => {\n        return { value: id, label: id, id }\n      })\n      state.userIds = selectArr;\n    }\n  }\n})\n\nexport const {\n  getPostsStart,\n  getPostsSuccess,\n  getPostsFailed,\n  setUserIds\n} = postsResults.actions\n\nexport default postsResults.reducer\n\nexport const fetchPosts = (): AppThunk => async dispatch => {\n  try {\n    const posts = await getPosts()\n      .then((data) => {\n        dispatch(getPostsSuccess(data))\n        dispatch(setUserIds(data))\n      })\n  } catch (err) {\n    dispatch(getPostsFailed(err.toString()))\n  }\n\n}\n\nexport const extractUserIds = (data: PostResults) => {\n  return [...new Set(data.postsResults.map((post) => post.userId.toString()))]\n}","/Users/lawhl/Sites/bnr/bnr-postlist/src/app/api/postAPI.tsx",[],"/Users/lawhl/Sites/bnr/bnr-postlist/src/features/postlist/PostList.tsx",[],"/Users/lawhl/Sites/bnr/bnr-postlist/src/app/components/select/Select.tsx",["57"],"import React, { useEffect } from 'react';\n\nexport interface SelectItem {\n  label: string,\n  value: string,\n  id: string\n}\ninterface SelectState {\n  options: SelectItem[],\n  onChange: (event: React.ChangeEvent<HTMLSelectElement>) => void;\n}\n\nexport function Select(props: SelectState) {\n\n  return (\n    <select onChange={props.onChange}>\n      {props.options.length > 0 ? props.options.map((option) => {\n        return (<option key={option.id} value={option.value}>{option.label}</option>)\n      }) : null}\n    </select>\n  )\n}","/Users/lawhl/Sites/bnr/bnr-postlist/src/features/postlist/featuredPosts.tsx",[],"/Users/lawhl/Sites/bnr/bnr-postlist/src/features/postlist/sidebarPosts.tsx",[],{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","replacedBy":"61"},{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","severity":1,"message":"63","line":2,"column":10,"nodeType":"64","messageId":"65","endLine":2,"endColumn":32},{"ruleId":"62","severity":1,"message":"66","line":58,"column":11,"nodeType":"64","messageId":"65","endLine":58,"endColumn":16},{"ruleId":"62","severity":1,"message":"67","line":1,"column":17,"nodeType":"64","messageId":"65","endLine":1,"endColumn":26},"no-native-reassign",["68"],"no-negated-in-lhs",["69"],"@typescript-eslint/no-unused-vars","'ImportsNotUsedAsValues' is defined but never used.","Identifier","unusedVar","'posts' is assigned a value but never used.","'useEffect' is defined but never used.","no-global-assign","no-unsafe-negation"]